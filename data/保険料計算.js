const hokenRangeTable = [
  [58000, 0, 63000],
  [68000, 63000, 73000],
  [78000, 73000, 83000],
  [88000, 83000, 93000],
  [98000, 93000, 101000],
  [104000, 101000, 107000],
  [110000, 107000, 114000],
  [118000, 114000, 122000],
  [126000, 122000, 130000],
  [134000, 130000, 138000],
  [142000, 138000, 146000],
  [150000, 146000, 155000],
  [160000, 155000, 165000],
  [170000, 165000, 175000],
  [180000, 175000, 185000],
  [190000, 185000, 195000],
  [200000, 195000, 210000],
  [220000, 210000, 230000],
  [240000, 230000, 250000],
  [260000, 250000, 270000],
  [280000, 270000, 290000],
  [300000, 290000, 310000],
  [320000, 310000, 330000],
  [340000, 330000, 350000],
  [360000, 350000, 370000],
  [380000, 370000, 395000],
  [410000, 395000, 425000],
  [440000, 425000, 455000],
  [470000, 455000, 485000],
  [500000, 485000, 515000],
  [530000, 515000, 545000],
  [560000, 545000, 575000],
  [590000, 575000, 605000],
  [620000, 605000, 635000],
  [650000, 635000, 665000],
  [680000, 665000, 695000],
  [710000, 695000, 730000],
  [750000, 730000, 770000],
  [790000, 770000, 810000],
  [830000, 810000, 855000],
  [880000, 855000, 905000],
  [930000, 905000, 955000],
  [980000, 955000, 1005000],
  [1030000, 1005000, 1055000],
  [1090000, 1055000, 1115000],
  [1150000, 1115000, 1175000],
  [1210000, 1175000, 1235000],
  [1270000, 1235000, 1295000],
  [1330000, 1295000, 1355000],
  [1390000, 1355000, 9999999],
];


function 健康保険料等級計算(amount) {
    // hokenRangeTableの最後の行の[1]を超える場合はその数値を返す
    if (amount > hokenRangeTable[hokenRangeTable.length - 1][1]) {
        return amount;
    }

    // hokenRangeTableをループして条件に合う箇所を探す
    for (let i = 0; i < hokenRangeTable.length; i++) {
        if (hokenRangeTable[i][1] >= amount) {
            return hokenRangeTable[i - 1][0];
        }
    }
    
    // デフォルトの戻り値（必要に応じて変更）
    return null;
}

function 厚生年金等級計算(amount) {
    // 金額が635000を超える場合は635000を使用
    if (amount > 635000) {
        amount = 635000;
    }

    // hokenRangeTableをループして条件に合う箇所を探す
    for (let i = 0; i < hokenRangeTable.length; i++) {
        if (hokenRangeTable[i][1] >= amount) {
            return hokenRangeTable[i - 1][0];
        }
    }
    
    // デフォルトの戻り値（必要に応じて変更）
    return null;
}


